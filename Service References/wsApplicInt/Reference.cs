//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MedHealthSolutions.wsApplicInt {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="wsApplicInt.MainSoap")]
    public interface MainSoap {
        
        // CODEGEN: Generating message contract since message GetEncryptedBillingReportsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEncryptedBillingReports", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MedHealthSolutions.wsApplicInt.GetEncryptedBillingReportsResponse GetEncryptedBillingReports(MedHealthSolutions.wsApplicInt.GetEncryptedBillingReportsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode SetOrder(System.Xml.XmlNode xdOrder, string login, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUrl", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetUrl(string TrackingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangeExaminerAndTZ", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ChangeExaminerAndTZ(string TrackingID, string LastName, string FirstName, string GovtID, int TimeZoneOffset, string RequestDate, string RequestTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangeExaminer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ChangeExaminer(string TrackingID, string LastName, string FirstName, string GovtID, string RequestDate, string RequestTime);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AuthHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string usernameField;
        
        private string passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("Username");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEncryptedBillingReports", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetEncryptedBillingReportsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public MedHealthSolutions.wsApplicInt.AuthHeader AuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.DateTime from;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.DateTime to;
        
        public GetEncryptedBillingReportsRequest() {
        }
        
        public GetEncryptedBillingReportsRequest(MedHealthSolutions.wsApplicInt.AuthHeader AuthHeader, System.DateTime from, System.DateTime to) {
            this.AuthHeader = AuthHeader;
            this.from = from;
            this.to = to;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEncryptedBillingReportsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetEncryptedBillingReportsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetEncryptedBillingReportsResult;
        
        public GetEncryptedBillingReportsResponse() {
        }
        
        public GetEncryptedBillingReportsResponse(byte[] GetEncryptedBillingReportsResult) {
            this.GetEncryptedBillingReportsResult = GetEncryptedBillingReportsResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MainSoapChannel : MedHealthSolutions.wsApplicInt.MainSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MainSoapClient : System.ServiceModel.ClientBase<MedHealthSolutions.wsApplicInt.MainSoap>, MedHealthSolutions.wsApplicInt.MainSoap {
        
        public MainSoapClient() {
        }
        
        public MainSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MainSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MedHealthSolutions.wsApplicInt.GetEncryptedBillingReportsResponse MedHealthSolutions.wsApplicInt.MainSoap.GetEncryptedBillingReports(MedHealthSolutions.wsApplicInt.GetEncryptedBillingReportsRequest request) {
            return base.Channel.GetEncryptedBillingReports(request);
        }
        
        public byte[] GetEncryptedBillingReports(MedHealthSolutions.wsApplicInt.AuthHeader AuthHeader, System.DateTime from, System.DateTime to) {
            MedHealthSolutions.wsApplicInt.GetEncryptedBillingReportsRequest inValue = new MedHealthSolutions.wsApplicInt.GetEncryptedBillingReportsRequest();
            inValue.AuthHeader = AuthHeader;
            inValue.from = from;
            inValue.to = to;
            MedHealthSolutions.wsApplicInt.GetEncryptedBillingReportsResponse retVal = ((MedHealthSolutions.wsApplicInt.MainSoap)(this)).GetEncryptedBillingReports(inValue);
            return retVal.GetEncryptedBillingReportsResult;
        }
        
        public System.Xml.XmlNode SetOrder(System.Xml.XmlNode xdOrder, string login, string pwd) {
            return base.Channel.SetOrder(xdOrder, login, pwd);
        }
        
        public string GetUrl(string TrackingID) {
            return base.Channel.GetUrl(TrackingID);
        }
        
        public bool ChangeExaminerAndTZ(string TrackingID, string LastName, string FirstName, string GovtID, int TimeZoneOffset, string RequestDate, string RequestTime) {
            return base.Channel.ChangeExaminerAndTZ(TrackingID, LastName, FirstName, GovtID, TimeZoneOffset, RequestDate, RequestTime);
        }
        
        public bool ChangeExaminer(string TrackingID, string LastName, string FirstName, string GovtID, string RequestDate, string RequestTime) {
            return base.Channel.ChangeExaminer(TrackingID, LastName, FirstName, GovtID, RequestDate, RequestTime);
        }
    }
}
